//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HomeSecurityModel", "MediaReference", "Medium", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeSecurity.Data.Entity.Medium), "Medium1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeSecurity.Data.Entity.Medium))]

#endregion

namespace HomeSecurity.Data.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HomeSecurityEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HomeSecurityEntities object using the connection string found in the 'HomeSecurityEntities' section of the application configuration file.
        /// </summary>
        public HomeSecurityEntities() : base("name=HomeSecurityEntities", "HomeSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeSecurityEntities object.
        /// </summary>
        public HomeSecurityEntities(string connectionString) : base(connectionString, "HomeSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeSecurityEntities object.
        /// </summary>
        public HomeSecurityEntities(EntityConnection connection) : base(connection, "HomeSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppSetting> AppSettings
        {
            get
            {
                if ((_AppSettings == null))
                {
                    _AppSettings = base.CreateObjectSet<AppSetting>("AppSettings");
                }
                return _AppSettings;
            }
        }
        private ObjectSet<AppSetting> _AppSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medium> Media
        {
            get
            {
                if ((_Media == null))
                {
                    _Media = base.CreateObjectSet<Medium>("Media");
                }
                return _Media;
            }
        }
        private ObjectSet<Medium> _Media;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppSettings(AppSetting appSetting)
        {
            base.AddObject("AppSettings", appSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Media EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedia(Medium medium)
        {
            base.AddObject("Media", medium);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeSecurityModel", Name="AppSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppSetting object.
        /// </summary>
        /// <param name="settingName">Initial value of the SettingName property.</param>
        /// <param name="settingValue">Initial value of the SettingValue property.</param>
        public static AppSetting CreateAppSetting(global::System.String settingName, global::System.String settingValue)
        {
            AppSetting appSetting = new AppSetting();
            appSetting.SettingName = settingName;
            appSetting.SettingValue = settingValue;
            return appSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingName
        {
            get
            {
                return _SettingName;
            }
            set
            {
                if (_SettingName != value)
                {
                    OnSettingNameChanging(value);
                    ReportPropertyChanging("SettingName");
                    _SettingName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SettingName");
                    OnSettingNameChanged();
                }
            }
        }
        private global::System.String _SettingName;
        partial void OnSettingNameChanging(global::System.String value);
        partial void OnSettingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingValue
        {
            get
            {
                return _SettingValue;
            }
            set
            {
                if (_SettingValue != value)
                {
                    OnSettingValueChanging(value);
                    ReportPropertyChanging("SettingValue");
                    _SettingValue = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SettingValue");
                    OnSettingValueChanged();
                }
            }
        }
        private global::System.String _SettingValue;
        partial void OnSettingValueChanging(global::System.String value);
        partial void OnSettingValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeSecurityModel", Name="Medium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medium object.
        /// </summary>
        /// <param name="mediaID">Initial value of the MediaID property.</param>
        /// <param name="mediaDate">Initial value of the MediaDate property.</param>
        /// <param name="mediaType">Initial value of the MediaType property.</param>
        /// <param name="mediaName">Initial value of the MediaName property.</param>
        public static Medium CreateMedium(global::System.Guid mediaID, global::System.DateTime mediaDate, global::System.String mediaType, global::System.String mediaName)
        {
            Medium medium = new Medium();
            medium.MediaID = mediaID;
            medium.MediaDate = mediaDate;
            medium.MediaType = mediaType;
            medium.MediaName = mediaName;
            return medium;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MediaID
        {
            get
            {
                return _MediaID;
            }
            set
            {
                if (_MediaID != value)
                {
                    OnMediaIDChanging(value);
                    ReportPropertyChanging("MediaID");
                    _MediaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaID");
                    OnMediaIDChanged();
                }
            }
        }
        private global::System.Guid _MediaID;
        partial void OnMediaIDChanging(global::System.Guid value);
        partial void OnMediaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MediaDate
        {
            get
            {
                return _MediaDate;
            }
            set
            {
                OnMediaDateChanging(value);
                ReportPropertyChanging("MediaDate");
                _MediaDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaDate");
                OnMediaDateChanged();
            }
        }
        private global::System.DateTime _MediaDate;
        partial void OnMediaDateChanging(global::System.DateTime value);
        partial void OnMediaDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MediaDescription
        {
            get
            {
                return _MediaDescription;
            }
            set
            {
                OnMediaDescriptionChanging(value);
                ReportPropertyChanging("MediaDescription");
                _MediaDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MediaDescription");
                OnMediaDescriptionChanged();
            }
        }
        private global::System.String _MediaDescription;
        partial void OnMediaDescriptionChanging(global::System.String value);
        partial void OnMediaDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaType
        {
            get
            {
                return _MediaType;
            }
            set
            {
                OnMediaTypeChanging(value);
                ReportPropertyChanging("MediaType");
                _MediaType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaType");
                OnMediaTypeChanged();
            }
        }
        private global::System.String _MediaType;
        partial void OnMediaTypeChanging(global::System.String value);
        partial void OnMediaTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaName
        {
            get
            {
                return _MediaName;
            }
            set
            {
                OnMediaNameChanging(value);
                ReportPropertyChanging("MediaName");
                _MediaName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaName");
                OnMediaNameChanged();
            }
        }
        private global::System.String _MediaName;
        partial void OnMediaNameChanging(global::System.String value);
        partial void OnMediaNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeSecurityModel", "MediaReference", "Medium1")]
        public EntityCollection<Medium> Media1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medium>("HomeSecurityModel.MediaReference", "Medium1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medium>("HomeSecurityModel.MediaReference", "Medium1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeSecurityModel", "MediaReference", "Medium")]
        public EntityCollection<Medium> Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medium>("HomeSecurityModel.MediaReference", "Medium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medium>("HomeSecurityModel.MediaReference", "Medium", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
